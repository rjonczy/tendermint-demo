# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with a Service Principal for Microsoft Azure. 


# On pull request events, this workflow will run:
# `terraform init`, 
# `terraform fmt`, and 
# `terraform plan`

# On push events to the "main" branch, `terraform apply` will be executed.
#

# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform
#

name: 'Terraform Azure'

on:
  push:
    paths:
      - terraform/azure/**
    branches:
    - "main"
  pull_request:
    paths:
      - terraform/azure/**

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: terraform/azure
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -input=false

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
